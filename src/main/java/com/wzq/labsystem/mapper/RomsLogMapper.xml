<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzq.labsystem.mapper.RomsLogMapper">
  <resultMap id="BaseResultMap" type="com.wzq.labsystem.dto.po.RomsLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="handle_user_id" jdbcType="BIGINT" property="handleUserId" />
    <result column="rom_id" jdbcType="BIGINT" property="romId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>

  <resultMap id="RomsLogResultMap" type="com.wzq.labsystem.dto.RomsLogDto">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="apply_id" jdbcType="BIGINT" property="applyId" />
    <result column="name" jdbcType="BIGINT" property="name" />
    <result column="handle_user_id" jdbcType="BIGINT" property="handleUserId" />
    <result column="handle_user" jdbcType="BIGINT" property="handleUser" />
    <result column="rom_id" jdbcType="BIGINT" property="romId" />
    <result column="numb" jdbcType="BIGINT" property="romNumb" />
    <result column="rom_name" jdbcType="VARCHAR" property="romName" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from roms_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wzq.labsystem.dto.po.RomsLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roms_log (user_id, handle_user_id, rom_id, 
      `state`, creat_time, handle_time, 
      start_time, end_time)
    values (#{userId,jdbcType=BIGINT}, #{handleUserId,jdbcType=BIGINT}, #{romId,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{creatTime,jdbcType=TIMESTAMP}, #{handleTime,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wzq.labsystem.dto.po.RomsLog">
    update roms_log
    set user_id = #{userId,jdbcType=BIGINT},
      handle_user_id = #{handleUserId,jdbcType=BIGINT},
      rom_id = #{romId,jdbcType=BIGINT},
      `state` = #{state,jdbcType=TINYINT},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_id, handle_user_id, rom_id, `state`, creat_time, handle_time, start_time,
    end_time
    from roms_log
    where id = #{id,jdbcType=BIGINT}
  </select>


  <!-- 查询所有申请 -->
  <select id="selectAll" resultMap="RomsLogResultMap">
    select l.id,l.user_id as apply_id, u.`name`,l.handle_user_id, a.`name` as handle_user,l.rom_id, r.numb, r.rom_name, l.`state`, l.creat_time, l.handle_time, l.start_time,
    l.end_time
    from roms_log l
    left join users u on u.id = l.user_id
    left join users a on a.id = l.handle_user_id
    left join roms r on r.id = l.rom_id
    <where>
      <if test="userId != null ">
        and l.user_id = #{userId}
      </if>
      <if test="handleUserId != null ">
        and l.handle_user_id = #{handleUserId}
      </if>
      <if test="romId != null ">
        and l.rom_id = #{romId}
      </if>
      <if test="state != null ">
        and l.`state` = #{state}
      </if>
    </where>
    order by l.creat_time desc
      <if test="pageNo != null and pageSize != null ">
          limit #{pageNo},#{pageSize}
      </if>
  </select>

  <!-- 查询总数 -->
  <select id="selectCount" resultType="java.lang.Long">
    select count(*)
    from roms_log l
    left join users u on u.id = l.user_id
    left join users a on a.id = l.handle_user_id
    left join roms r on r.id = l.rom_id
    <where>
      <if test="userId != null ">
        and l.user_id = #{userId}
      </if>
      <if test="handleUserId != null ">
        and l.handle_user_id = #{handleUserId}
      </if>
      <if test="romId != null ">
        and l.rom_id = #{romId}
      </if>
      <if test="state != null ">
        and l.`state` = #{state}
      </if>
    </where>
  </select>

  <!-- 查询某用户所有申请 -->
  <select id="selectAllByUserId" resultMap="RomsLogResultMap">
    select l.id,l.user_id as apply_id, u.`name`,l.handle_user_id, a.`name` as handle_user,l.rom_id, r.numb, r.rom_name, l.`state`, l.creat_time, l.handle_time, l.start_time,
    l.end_time
    from roms_log l
    left join users u on u.id = l.user_id
    left join users a on a.id = l.handle_user_id
	left join roms r on r.id = l.rom_id
	where u.id = #{userId}
	order by l.creat_time desc
	limit #{pageNo},#{pageSize}
  </select>

  <!-- 查询某用户的申请总数 -->
  <select id="selectCountByUserId"  resultType="java.lang.Long">
    select count(*)
    from roms_log
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <!-- 查询某教室申请记录 -->
  <select id="selectAllByRomId" resultMap="RomsLogResultMap">
    select l.id,l.user_id as apply_id, u.`name`,l.handle_user_id, a.`name` as handle_user,l.rom_id, r.numb, r.rom_name, l.`state`, l.creat_time, l.handle_time, l.start_time,
    l.end_time
    from roms_log l
    left join users u on u.id = l.user_id
    left join users a on a.id = l.handle_user_id
	left join roms r on r.id = l.rom_id
	where l.rom_id = #{romId}
	order by l.creat_time desc
	limit #{pageNo},#{pageSize}
  </select>

  <!-- 查询某教室的申请总数 -->
  <select id="selectCountByRomId"  resultType="java.lang.Long">
    select count(*)
    from roms_log
    where rom_id = #{romId,jdbcType=BIGINT}
  </select>

  <!-- 修改处理状态 -->
  <update id="updateState" parameterType="com.wzq.labsystem.dto.po.RomsLog">
    update roms_log
    set
      handle_user_id = #{handleUserId},
      rom_id = #{romId,jdbcType=BIGINT},
      `state` = #{state,jdbcType=TINYINT},
      handle_time = #{handleTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>



</mapper>