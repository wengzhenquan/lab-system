<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzq.labsystem.mapper.RomsMapper">
  <resultMap id="BaseResultMap" type="com.wzq.labsystem.dto.po.Roms">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="numb" jdbcType="INTEGER" property="numb" />
    <result column="rom_name" jdbcType="VARCHAR" property="romName" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="person_liable_id" jdbcType="BIGINT" property="personLiableId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>

  <resultMap id="RoomsResultMap" type="com.wzq.labsystem.dto.RomsDto">
    <id column="id" jdbcType="BIGINT" property="romsId" />
    <result column="numb" jdbcType="INTEGER" property="numb" />
    <result column="rom_name" jdbcType="VARCHAR" property="romName" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="person_liable_id" jdbcType="BIGINT" property="personLiableId" />
    <result column="name" jdbcType="VARCHAR" property="personLiable" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from roms
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wzq.labsystem.dto.po.Roms">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roms (numb, `type`,rom_name, person_liable_id,
      content, `state`)
    values (#{numb,jdbcType=INTEGER}, #{type,jdbcType=TINYINT},#{romName,jdbcType=VARCHAR},
     #{personLiableId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT})
  </insert>


  <update id="updateByPrimaryKey" parameterType="com.wzq.labsystem.dto.po.Roms">
    update roms
    set numb = #{numb,jdbcType=INTEGER},
      `type` = #{type,jdbcType=TINYINT},
      rom_name = #{romName,jdbcType=VARCHAR},
      person_liable_id = #{personLiableId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 查询房间信息 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="RoomsResultMap">
    select r.id, r.numb, r.`type`, r.rom_name,r.person_liable_id, u.`name`, r.content, r.`state`
    from roms r
    left join users u on r.person_liable_id = u.id
    where r.id = #{romsId,jdbcType=BIGINT}
  </select>

  <!-- 查询所有房间列表 -->
  <select id="selectAll" resultMap="RoomsResultMap">
    select r.id, r.numb, r.`type`, r.rom_name,r.person_liable_id, u.`name`, r.content, r.`state`
    from roms r
    left join users u on r.person_liable_id = u.id
      <where>
          <if test="roms.numb != null and roms.numb != ''">
              and r.numb = #{roms.numb}
          </if>
          <if test="roms.type != null and roms.type != ''">
              and r.`type` = #{roms.type}
          </if>
          <if test="roms.person_liable_id != null and roms.person_liable_id != ''">
              and r.person_liable_id = #{roms.person_liable_id}
          </if>
          <if test="roms.state != null and roms.state != ''">
              and r.`state` = #{roms.state}
          </if>
      </where>
      <if test="pageNo != null and pageNo != ''and pageSize != null and pageSize != '">
          limit #{pageNo},#{pageSize}
      </if>
  </select>

  <!-- 查询总数 -->
  <select id="selectCount" resultType="java.lang.Long">
    select count(*)
    from roms
      <where>
          <if test="roms.numb != null and roms.numb != ''">
              and numb = #{roms.numb}
          </if>
          <if test="roms.type != null and roms.type != ''">
              and `type` = #{roms.type}
          </if>
          <if test="roms.person_liable_id != null and roms.person_liable_id != ''">
              and person_liable_id = #{roms.person_liable_id}
          </if>
          <if test="roms.state != null and roms.state != ''">
              and `state` = #{roms.state}
          </if>
      </where>
  </select>

  <!-- 修改教室状态-->
  <update id="updateStateByPrimaryKey" >
    update roms
    set  `state` = #{state}
    where id = #{id}
  </update>

    <!-- 初始化教室状态-->
  <update id="updateStateInitialize" >
    update roms
    set  `state` = 0
    where `type` &lt;&gt; 0
  </update>
</mapper>