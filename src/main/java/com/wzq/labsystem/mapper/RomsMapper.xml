<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzq.labsystem.mapper.RomsMapper">
  <resultMap id="BaseResultMap" type="com.wzq.labsystem.dto.po.Roms">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="numb" jdbcType="INTEGER" property="numb" />
    <result column="rom_name" jdbcType="VARCHAR" property="romName" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>

  <resultMap id="RoomsResultMap" type="com.wzq.labsystem.dto.RomsDto">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="numb" jdbcType="INTEGER" property="numb" />
    <result column="rom_name" jdbcType="VARCHAR" property="romName" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from roms
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wzq.labsystem.dto.po.Roms">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roms (numb, ,rom_name, user_id,
      content, `state`)
    values (#{numb,jdbcType=INTEGER}, #{romName,jdbcType=VARCHAR},
     #{userId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT})
  </insert>


  <update id="updateByPrimaryKey" parameterType="com.wzq.labsystem.dto.po.Roms">
    update roms
    set numb = #{numb,jdbcType=INTEGER},
      rom_name = #{romName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 查询实验室信息 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="RoomsResultMap">
    select r.id, r.numb, r.rom_name,r.user_id, u.`name`, r.content, r.`state`
    from roms r
    left join users u on r.user_id = u.id
    where r.id = #{romsId,jdbcType=BIGINT}
  </select>

  <!-- 查询所有实验室列表 -->
  <select id="selectAll" resultMap="RoomsResultMap">
    select r.id, r.numb,  r.rom_name,r.user_id, u.`name`, r.content, r.`state`
    from roms r
    left join users u on r.user_id = u.id
      <where>
          <if test="numb != null ">
              and r.numb = #{numb}
          </if>
          <if test="userId != null ">
              and r.user_id = #{userId}
          </if>
          <if test="state != null ">
              and r.`state` = #{state}
          </if>
      </where>
      <if test="pageNo != null and pageSize != null ">
          limit #{pageNo},#{pageSize}
      </if>
  </select>

  <!-- 查询总数 -->
  <select id="selectCount" resultType="java.lang.Long">
    select count(*)
    from roms r
    left join users u on r.user_id = u.id
    <where>
      <if test="numb != null '">
          and r.numb = #{numb}
      </if>
      <if test="userId != null ">
          and r.user_id = #{userId}
      </if>
      <if test="state != null ">
          and r.`state` = #{state}
      </if>
    </where>
  </select>

  <!-- 修改教室状态-->
  <update id="updateStateByPrimaryKey" >
    update roms
    set  `state` = #{state}
    where id = #{id}
  </update>

    <!-- 初始化教室状态-->
  <update id="updateStateInitialize" >
    update roms
    set  `state` = 0
    where  `state` &lt;&gt; 0
  </update>
</mapper>